const express = require("express");
const router = express.Router();
const db = require("../db");

// ‡∏î‡∏∂‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
router.get("/", (req, res) => {
  db.query("SELECT * FROM products", (err, results) => {
      if (err) {
          console.error("‚ùå Error fetching products:", err);
          return res.status(500).send("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
      }
      console.log("‚úÖ Products fetched:", results);
      res.render("products", { products: results });
  });
});


// ‡∏î‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
router.get("/add", (req, res) => {
    res.render("add-product");
});

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å category_name ‡πÄ‡∏õ‡πá‡∏ô category_id)
router.post("/add", (req, res) => {
  const { name, description, normal_price, promo_price, category, image } = req.body;
  
  console.log("üìå Data received from form:", req.body);  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤

  const sqlGetCategoryId = "SELECT id FROM categories WHERE category_name = ?";
  db.query(sqlGetCategoryId, [category], (err, result) => {
      if (err) {
          console.error("‚ùå Error fetching category_id:", err);
          return res.status(500).send("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà");
      }

      console.log("‚úÖ Category found:", result);

      if (result.length > 0) {
          const category_id = result[0].id;

          const sqlInsert = `INSERT INTO products 
                            (product_name, product_description, product_normal_price, product_price_promotion, category_id, product_images) 
                            VALUES (?, ?, ?, ?, ?, ?)`;
          const values = [name, description, normal_price, promo_price, category_id, image];

          db.query(sqlInsert, values, (err) => {
              if (err) {
                  console.error("‚ùå Error inserting product:", err);
                  return res.status(500).send("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
              }
              console.log("‚úÖ Product added successfully");
              res.redirect("/products");
          });
      } else {
          res.status(400).send("‚ùå ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
      }
  });
});



// ‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
router.post("/delete", (req, res) => {
    db.query("DELETE FROM products WHERE id = ?", [req.body.id], (err) => {
        if (err) {
            console.error("‚ùå Error deleting product:", err);
            return res.status(500).send("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤");
        }
        res.redirect("/products");
    });
});

module.exports = router;
